name: Publish Changed NuGet Packages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release --no-restore

      - name: Get list of changed csproj files
        id: changed-projects
        run: |
          echo "Detecting changed csproj files..."

          if [ "${{ github.event_name }}" = "pull_request" ]; then
            git diff --name-only origin/${{ github.event.pull_request.base.ref }}...${{ github.sha }} | grep '\.csproj$' || true
          else
            git diff --name-only HEAD^ HEAD | grep '\.csproj$' || true
          fi > changed.txt

          PROJECTS=$(cat changed.txt | tr '\n' ' ')
          echo "Changed projects: $PROJECTS"
          echo "projects=$PROJECTS" >> $GITHUB_OUTPUT

      - name: Pack and Push Changed Packages
        if: steps.changed-projects.outputs.projects != ''
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          echo "Packing and pushing projects: ${{ steps.changed-projects.outputs.projects }}"

          for proj in ${{ steps.changed-projects.outputs.projects }}
          do
            echo "Packing $proj"
            dotnet pack "$proj" --configuration Release --no-build --output ./nupkgs

            nupkg_file=$(ls ./nupkgs/*.nupkg | head -n 1)
            if [ -z "$nupkg_file" ]; then
              echo "No nupkg file found for $proj, skipping push."
              continue
            fi
            echo "Pushing $nupkg_file"
            dotnet nuget push "$nupkg_file" --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json --skip-duplicate
            rm ./nupkgs/*.nupkg
          done
